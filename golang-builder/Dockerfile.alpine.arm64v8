ARG GO_VERSION
FROM multiarch/qemu-user-static:x86_64-aarch64 as qemu

FROM accelbyte/golang:${GO_VERSION}-alpine-arm64v8
LABEL maintainer "operations@accelbyte.net"
COPY --from=qemu /usr/bin/qemu-aarch64-static /usr/bin

ENV PATH="opt/sonar/bin:${PATH}"
ENV GOCACHE="${GOPATH}/build-cache"
RUN mkdir GOCACHE

RUN echo "http://dl-cdn.alpinelinux.org/alpine/v3.9/main" >> /etc/apk/repositories; \
    echo "http://dl-cdn.alpinelinux.org/alpine/v3.9/community" >> /etc/apk/repositories; \
    apk update; \
    apk add mongodb yaml-cpp=0.6.2-r2; \
    mongo -version; \
    sed -i "#http://dl-cdn.alpinelinux.org/alpine/v3.9/main#d" /etc/apk/repositories; \
    sed -i "#http://dl-cdn.alpinelinux.org/alpine/v3.9/community#d" /etc/apk/repositories

RUN apk add --update --no-cache \
      bash \
      make \
      git \
      docker \
      rhash \
      openssh \
      unzip \
      libc6-compat \
      openjdk8-jre \
      gcc \
      musl-dev \
      python3 \
      py-pip \
      python3-dev \
      libffi-dev \
      openssl-dev \
      libc-dev \
      jq \
      yarn \
      docker-compose \
      postgresql-client; \
      pip3 install awscli;

RUN curl -L https://binaries.sonarsource.com/Distribution/sonar-scanner-cli/sonar-scanner-cli-4.6.2.2472.zip \
      -o sonar-scanner.zip; \
    unzip -q sonar-scanner.zip; \
    rm sonar-scanner.zip; \
    mv sonar-scanner-* sonar-scanner; \
    mv sonar-scanner /opt/sonar; \
    sed -i "s/use_embedded_jre=true/use_embedded_jre=false/g" /opt/sonar/bin/sonar-scanner;

RUN curl -L https://github.com/jwilder/dockerize/releases/download/v0.6.1/dockerize-linux-armel-v0.6.1.tar.gz --output dockerize.tar.gz; \
    tar -xvf dockerize.tar.gz; \
    mv dockerize /usr/bin/; \
    rm -rf dockerize.tar.gz

RUN go get -v -u github.com/AccelByte/abgocyclo; \
    go get -v -u github.com/derekparker/delve/cmd/dlv; \
    go get -v -u github.com/derekparker/delve/cmd/dlv; \
    go get -v github.com/axw/gocov/...; \
    go get -v github.com/AlekSi/gocov-xml; \
    go get -v -u github.com/jstemmer/go-junit-report;

CMD []
ENTRYPOINT []
